//>>built
define("dojox/data/RailsStore",["dojo","dojox","dojox/data/JsonRestStore"],function(c,h){c.declare("dojox.data.RailsStore",h.data.JsonRestStore,{constructor:function(){},preamble:function(a){if(typeof a.target=="string"&&!a.service){var f=a.target.replace(/\/$/g,"");a.service=h.rpc.Rest(this.target,!0,null,function(a,b){var b=b||{},i=f,g,e;c.isObject(a)?(e="",g="?"+c.objectToQuery(a)):b.queryStr&&b.queryStr.indexOf("?")!=-1?(e=b.queryStr.replace(/\?.*/,""),g=b.queryStr.replace(/[^?]*\?/g,"?")):c.isString(b.query)&&
b.query.indexOf("?")!=-1?(e=b.query.replace(/\?.*/,""),g=b.query.replace(/[^?]*\?/g,"?")):(e=a?a.toString():"",g="");e.indexOf("=")!=-1&&(g=e,e="");var j=h.rpc._sync;h.rpc._sync=!1;return{url:e?i+"/"+e+".json"+g:i+".json"+g,handleAs:"json",contentType:"application/json",sync:j,headers:{Accept:"application/json,application/javascript",Range:b&&(b.start>=0||b.count>=0)?"items="+(b.start||"0")+"-"+(b.count&&b.count+(b.start||0)-1||""):void 0}}})}},fetch:function(a){function f(b){if(a.queryStr==null){if(a.queryStr==
null)a.queryStr="";if(c.isObject(a.query))a.queryStr="?"+c.objectToQuery(a.query);else if(c.isString(a.query))a.queryStr=a.query}a.queryStr=a.queryStr+(a.queryStr.indexOf("?")==-1?"?":"&")+c.objectToQuery(b)}a=a||{};if(a.start||a.count){if((a.start||0)%a.count)throw Error("The start parameter must be a multiple of the count parameter");f({page:(a.start||0)/a.count+1,per_page:a.count})}if(a.sort){var d={sortBy:[],sortDir:[]};c.forEach(a.sort,function(a){d.sortBy.push(a.attribute);d.sortDir.push(a.descending?
"DESC":"ASC")});f(d);delete a.sort}return this.inherited(arguments)},_processResults:function(a,f){var d;if(typeof this.rootAttribute=="undefined"&&a[0])if(a[0][this.idAttribute])this.rootAttribute=!1,console.debug("RailsStore: without root_in_json");else for(d in a[0])if(a[0][d][this.idAttribute])this.rootAttribute=d,console.debug("RailsStore: with root_in_json, attribute: "+d);d=this.rootAttribute?c.map(a,function(a){return a[this.rootAttribute]},this):a;var b=a.length;return{totalCount:f.fullLength||
(f.request.count==b?(f.request.start||0)+b*2:b),items:d}}});return h.data.RailsStore});