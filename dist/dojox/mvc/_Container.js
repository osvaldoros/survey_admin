//>>built
define("dojox/mvc/_Container",["dojo/_base/declare","dojo/_base/lang","dijit/_WidgetBase","dojo/regexp"],function(e,f,g,h){return e("dojox.mvc._Container",[g],{stopParser:!0,exprchar:"$",templateString:"",_containedWidgets:[],_parser:null,_createBody:function(){if(!this._parser)try{this._parser=require("dojo/parser")}catch(c){try{this._parser=require("dojox/mobile/parser")}catch(a){console.error("Add explicit require(['dojo/parser']) or explicit require(['dojox/mobile/parser']), one of the parsers is required!")}}if(this._parser)this._containedWidgets=
this._parser.parse(this.srcNodeRef,{template:!0,inherited:{dir:this.dir,lang:this.lang},propsThis:this,scope:"dojo"})},_destroyBody:function(){if(this._containedWidgets&&this._containedWidgets.length>0)for(var c=this._containedWidgets.length-1;c>-1;c--){var a=this._containedWidgets[c];a&&!a._destroyed&&a.destroy&&a.destroy()}},_exprRepl:function(c){var a=this,d=function(b){if(!b)return"";b=b.substr(2);b=b.substr(0,b.length-1);with(a)return eval(b)},d=f.hitch(this,d);return c.replace(RegExp(h.escapeString(this.exprchar)+
"({.*?})","g"),function(b,a){return d(b,a).toString()})}})});