//>>built
define("dojox/mvc/StatefulModel",["dojo/_base/lang","dojo/_base/array","dojo/_base/declare","dojo/Stateful"],function(d,g,h,i){var f=h("dojox.mvc.StatefulModel",[i],{data:null,store:null,valid:!0,value:"",reset:function(){if(d.isObject(this.data)&&!(this.data instanceof Date)&&!(this.data instanceof RegExp))for(var a in this)this[a]&&d.isFunction(this[a].reset)&&this[a].reset();else this.set("value",this.data)},commit:function(a){this._commit();(a=a||this.store)&&this._saveToStore(a)},toPlainObject:function(){var a=
{},b=!1,c;for(c in this)this[c]&&d.isFunction(this[c].toPlainObject)&&(!b&&typeof this.get("length")==="number"&&(a=[]),b=!0,a[c]=this[c].toPlainObject());b||(a=this.get("length")===0?[]:this.value);return a},add:function(a,b){var c,e,d=new f({data:""});if(typeof this.get("length")==="number"&&/^[0-9]+$/.test(a.toString())){if(this.get(a)){c=a-0+1;if(e=this.get(c)){do this._copyStatefulProperties(e,d),this._copyStatefulProperties(b,e),this._copyStatefulProperties(d,b),this.set(c,e),e=this.get(++c);
while(e)}this.set(c,b)}else{if(!(this.get("length")==0&&a==0)&&!this.get(a-1))throw Error("Out of bounds insert attempted, must be contiguous.");this.set(a,b)}this.set("length",this.get("length")+1)}else this.set(a,b)},remove:function(a){var b,c;if(typeof this.get("length")==="number"&&/^[0-9]+$/.test(a.toString()))if(b=this.get(a)){this._removals=this._removals||[];this._removals.push(b.toPlainObject());n1=a-0+1;if(c=this.get(n1)){for(;c;)this._copyStatefulProperties(c,b),b=this.get(n1++),c=this.get(n1);
this.set(n1-1,void 0);delete this[n1-1]}else this.set(a,void 0),delete this[a];this.set("length",this.get("length")-1)}else throw Error("Out of bounds delete attempted - no such index: "+a);else if(b=this.get(a))this._removals=this._removals||[],this._removals.push(b.toPlainObject()),this.set(a,void 0),delete this[a];else throw Error("Illegal delete attempted - no such property: "+a);},valueOf:function(){return this.toPlainObject()},toString:function(){return this.value===""&&this.data?this.data.toString():
this.value.toString()},constructor:function(a){this._createModel(a&&"data"in a?a.data:this.data)},_createModel:function(a){if(d.isObject(a)&&!(a instanceof Date)&&!(a instanceof RegExp)&&a!==null){for(var b in a){var c=new f({data:a[b]});this.set(b,c)}d.isArray(a)&&this.set("length",a.length)}else this.set("value",a)},_commit:function(){for(var a in this)this[a]&&d.isFunction(this[a]._commit)&&this[a]._commit();this.data=this.toPlainObject()},_saveToStore:function(a){this._removals&&(g.forEach(this._removals,
function(b){a.remove(a.getIdentity(b))},this),delete this._removals);var b=this.toPlainObject();d.isArray(b)?g.forEach(b,function(b){a.put(b)},this):a.put(b)},_copyStatefulProperties:function(a,b){for(var c in a){var e=a.get(c);e&&d.isObject(e)&&d.isFunction(e.get)&&b.set(c,e)}}});return f});